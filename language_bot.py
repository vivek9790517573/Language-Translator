# -*- coding: utf-8 -*-
"""Language BOT.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yVCtci-PASUSEyk2LpbBKGJpWQ3AaXVw
"""

pip install googletrans==4.0.0-rc1

import pandas as pd
import time
import numpy as np
import sqlite3
from googletrans import Translator

T1 = time.time()
formatted_time = time.ctime(T1)

print("Hello,Welcome to our translation BOT \n")
time.sleep(2)

x = str(input("Please Enter Your Name \n"))
time.sleep(3)

# Validate the mobile number
def is_valid_mobile_number(mobile_number):
    if len(mobile_number) == 10 and mobile_number.isdigit():
        return True
    else:
        return False
y = input("Please Enter Your Phone Number \n")
while not is_valid_mobile_number(y):
    print("Invalid mobile number. Please enter a 10-digit number.")
    y = input("Enter a mobile number: ")
time.sleep(3)
# Validate the email
def is_valid_email(email):
    if '@' in email and '.com' in email:
        return True
    else:
        return False
z = input("Please Enter Your Email ID \n")
while not is_valid_email(z):
    print("Invalid email address. Please enter a valid email.")
    z = input("Enter an email address: ")

time_limit = 60
start_time = time.time()
end_time = start_time + time_limit
while time.time() < end_time:
    time.sleep(2)

    A= str(input("Please enter your translation word or sentence \n"))

    print("Please Select your translation language below \n")

    B= str(input("1.English \n2.Spanish \n3.French \n4.German \n5.Italian \n6.Portuguese \n7.Japanese \n8.Korean \n9.Chinese (Mandarin) \n10.Russian \n11.Arabic \n12.Hindi \n13.Tamil \n14.Telugu \n15.Bengali \n16.Urdu \n17.Gujarati \n18.Marathi \n19.Kannada \n"))

    if B in ['1','English','english']:
        #en english en english
        translator = Translator()
        translated_text = translator.translate(A, src='en', dest='en')
        print(translated_text.text)
    elif B in ['2','Spanish','spanish']:
        #en english es spanish
        translator = Translator()
        translated_text = translator.translate(A, src='en', dest='es')
        print(translated_text.text)
    elif B in ['3','French','french']:
        #en english fr french
        translator = Translator()
        translated_text = translator.translate(A, src='en', dest='fr')
        print(translated_text.text)
    elif B in ['4','German','german']:
        #en english de german
        translator = Translator()
        translated_text = translator.translate(A, src='en', dest='de')
        print(translated_text.text)
    elif B in ['5','Italian','italian']:
        #en english it italian
        translator = Translator()
        translated_text = translator.translate(A, src='en', dest='it')
        print(translated_text.text)
    elif B in ['6','Portuguese','portuguese']:
        #en english pt portuguese
        translator = Translator()
        translated_text = translator.translate(A, src='en', dest='pt')
        print(translated_text.text)
    elif B in ['7','Japanese','japanese']:
        #en english ja japanese
        translator = Translator()
        translated_text = translator.translate(A, src='en', dest='ja')
        print(translated_text.text)
    elif B in ['8','Korean','korean']:
        #en english ko korean
        translator = Translator()
        translated_text = translator.translate(A, src='en', dest='ko')
        print(translated_text.text)
    elif B in ['9','Chinese','chinese','Mandarin','mandarin']:
        #en english zh chinese
        translator = Translator()
        translated_text = translator.translate(A, src='en', dest='zh')
        print(translated_text.text)
    elif B in ['10','Russian','russian']:
        #en english ru russian
        translator = Translator()
        translated_text = translator.translate(A, src='en', dest='ru')
        print(translated_text.text)
    elif B in ['11','Arabic','arabic']:
        #en english ar arabic
        translator = Translator()
        translated_text = translator.translate(A, src='en', dest='ar')
        print(translated_text.text)
    elif B in ['12','Hindi','hindi']:
        #en english hi hindi
        translator = Translator()
        translated_text = translator.translate(A, src='en', dest='hi')
        print(translated_text.text)
    elif B in ['13','Tamil','tamil']:
        #en english ta tamil
        translator = Translator()
        translated_text = translator.translate(A, src='en', dest='ta')
        print(translated_text.text)
    elif B in ['14','Telugu','telugu']:
        #en english te telugu
        translator = Translator()
        translated_text = translator.translate(A, src='en', dest='te')
        print(translated_text.text)
    elif B in ['15','Bengali','bengali']:
        #en english bn bengali
        translator = Translator()
        translated_text = translator.translate(A, src='en', dest='bn')
        print(translated_text.text)
    elif B in ['16','Urdu','urdu']:
        #en english ur urdu
        translator = Translator()
        translated_text = translator.translate(A, src='en', dest='ur')
        print(translated_text.text)
    elif B in ['17','Gujarati','gujarati']:
        #en english gu gujarati
        translator = Translator()
        translated_text = translator.translate(A, src='en', dest='gu')
        print(translated_text.text)
    elif B in ['18','Marathi','marathi']:
        #en english mr marathi
        translator = Translator()
        translated_text = translator.translate(A, src='en', dest='mr')
        print(translated_text.text)
    elif B in ['19','Kannada','kannada']:
        #en english ka kannada
        translator = Translator()
        translated_text = translator.translate(A, src='en', dest='ka')
        print(translated_text.text)
    else :
        print("Sorry, no other languages are available for this translation, please try selecting one of the given languages again")

    a=np.array([x])
    b=np.array([y])
    c=np.array([z])
    frame={ "Name":a, "Phone Number":b,"Email":c,"Date & Time":formatted_time,"User Questions":A,"User selected language":B}
    df=pd.DataFrame(frame)
    database = "Translation BOT Data.sqlite"
    conn = sqlite3.connect(database)
    df.to_sql(name='Collected Data', con=conn,if_exists='append',index=False)
    conn.close()